{
  "uid" : "97529bad7ca5cf0f",
  "name" : "Проверка кнопки Новости в меню",
  "fullName" : "tests.test_header_menu#test_news_from_header_menu",
  "historyId" : "7e27edb4c9c83f2764933091f31fcf21",
  "time" : {
    "start" : 1688292954734,
    "stop" : 1688293061081,
    "duration" : 106347
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558ed064d4e3 <unknown>\n#1 0x558ed037cc76 <unknown>\n#2 0x558ed03b8c96 <unknown>\n#3 0x558ed03b8dc1 <unknown>\n#4 0x558ed03f27f4 <unknown>\n#5 0x558ed03d803d <unknown>\n#6 0x558ed03f030e <unknown>\n#7 0x558ed03d7de3 <unknown>\n#8 0x558ed03ad2dd <unknown>\n#9 0x558ed03ae34e <unknown>\n#10 0x558ed060d3e4 <unknown>\n#11 0x558ed06113d7 <unknown>\n#12 0x558ed061bb20 <unknown>\n#13 0x558ed0612023 <unknown>\n#14 0x558ed05e01aa <unknown>\n#15 0x558ed06366b8 <unknown>\n#16 0x558ed0636847 <unknown>\n#17 0x558ed0646243 <unknown>\n#18 0x7f751c132609 start_thread",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"532de7b0e5a16950d29c40064238a942\")>\nurl = 'https://tmn.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @allure.title(\"Проверка кнопки Новости в меню\")\n    def test_news_from_header_menu(driver, url):\n        head = Header(driver)\n        Base.open_page(driver, url)\n        time.sleep(2)\n        head.actions.move_to_element(head.get_menu_button()).perform()\n    \n        if url == 'https://mo.strana.com':\n            locator = Base.get_s_link_wrapper_locator(23)\n    \n        elif url == 'https://nsk.strana.com':\n            locator = Base.get_s_link_wrapper_locator(20)\n    \n        else:\n            locator = Base.get_s_link_wrapper_locator(25)\n    \n        Base.get_element_visibility(driver, (By.XPATH, locator)).click()\n>       assert head.get_news_tittle() == \"Новости Страны\"\n\ntests/test_header_menu.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_links.py:162: in get_news_tittle\n    return self.get_element_visibility(self.driver, (By.XPATH, self.news_tittle)).text\nbase/base_class.py:26: in get_element_visibility\n    raise e\nbase/base_class.py:21: in get_element_visibility\n    return WebDriverWait(driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"532de7b0e5a16950d29c40064238a942\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f0c785b02c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x558ed064d4e3 <unknown>\nE       #1 0x558ed037cc76 <unknown>\nE       #2 0x558ed03b8c96 <unknown>\nE       #3 0x558ed03b8dc1 <unknown>\nE       #4 0x558ed03f27f4 <unknown>\nE       #5 0x558ed03d803d <unknown>\nE       #6 0x558ed03f030e <unknown>\nE       #7 0x558ed03d7de3 <unknown>\nE       #8 0x558ed03ad2dd <unknown>\nE       #9 0x558ed03ae34e <unknown>\nE       #10 0x558ed060d3e4 <unknown>\nE       #11 0x558ed06113d7 <unknown>\nE       #12 0x558ed061bb20 <unknown>\nE       #13 0x558ed0612023 <unknown>\nE       #14 0x558ed05e01aa <unknown>\nE       #15 0x558ed06366b8 <unknown>\nE       #16 0x558ed0636847 <unknown>\nE       #17 0x558ed0646243 <unknown>\nE       #18 0x7f751c132609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1688292954028,
      "stop" : 1688292954733,
      "duration" : 705
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1688290985264,
      "stop" : 1688290985264,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1688290985264,
      "stop" : 1688290985264,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1688290985264,
      "stop" : 1688290985264,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1688292954028,
      "stop" : 1688292954028,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558ed064d4e3 <unknown>\n#1 0x558ed037cc76 <unknown>\n#2 0x558ed03b8c96 <unknown>\n#3 0x558ed03b8dc1 <unknown>\n#4 0x558ed03f27f4 <unknown>\n#5 0x558ed03d803d <unknown>\n#6 0x558ed03f030e <unknown>\n#7 0x558ed03d7de3 <unknown>\n#8 0x558ed03ad2dd <unknown>\n#9 0x558ed03ae34e <unknown>\n#10 0x558ed060d3e4 <unknown>\n#11 0x558ed06113d7 <unknown>\n#12 0x558ed061bb20 <unknown>\n#13 0x558ed0612023 <unknown>\n#14 0x558ed05e01aa <unknown>\n#15 0x558ed06366b8 <unknown>\n#16 0x558ed0636847 <unknown>\n#17 0x558ed0646243 <unknown>\n#18 0x7f751c132609 start_thread",
    "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"532de7b0e5a16950d29c40064238a942\")>\nurl = 'https://tmn.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @allure.title(\"Проверка кнопки Новости в меню\")\n    def test_news_from_header_menu(driver, url):\n        head = Header(driver)\n        Base.open_page(driver, url)\n        time.sleep(2)\n        head.actions.move_to_element(head.get_menu_button()).perform()\n    \n        if url == 'https://mo.strana.com':\n            locator = Base.get_s_link_wrapper_locator(23)\n    \n        elif url == 'https://nsk.strana.com':\n            locator = Base.get_s_link_wrapper_locator(20)\n    \n        else:\n            locator = Base.get_s_link_wrapper_locator(25)\n    \n        Base.get_element_visibility(driver, (By.XPATH, locator)).click()\n>       assert head.get_news_tittle() == \"Новости Страны\"\n\ntests/test_header_menu.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_links.py:162: in get_news_tittle\n    return self.get_element_visibility(self.driver, (By.XPATH, self.news_tittle)).text\nbase/base_class.py:26: in get_element_visibility\n    raise e\nbase/base_class.py:21: in get_element_visibility\n    return WebDriverWait(driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"532de7b0e5a16950d29c40064238a942\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f0c785b02c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x558ed064d4e3 <unknown>\nE       #1 0x558ed037cc76 <unknown>\nE       #2 0x558ed03b8c96 <unknown>\nE       #3 0x558ed03b8dc1 <unknown>\nE       #4 0x558ed03f27f4 <unknown>\nE       #5 0x558ed03d803d <unknown>\nE       #6 0x558ed03f030e <unknown>\nE       #7 0x558ed03d7de3 <unknown>\nE       #8 0x558ed03ad2dd <unknown>\nE       #9 0x558ed03ae34e <unknown>\nE       #10 0x558ed060d3e4 <unknown>\nE       #11 0x558ed06113d7 <unknown>\nE       #12 0x558ed061bb20 <unknown>\nE       #13 0x558ed0612023 <unknown>\nE       #14 0x558ed05e01aa <unknown>\nE       #15 0x558ed06366b8 <unknown>\nE       #16 0x558ed0636847 <unknown>\nE       #17 0x558ed0646243 <unknown>\nE       #18 0x7f751c132609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "73edad5ec60bc002",
      "name" : "screenshot_tests_test_header_menu.py::test_news_from_header_menu[https:__tmn.strana.com].png",
      "source" : "73edad5ec60bc002.png",
      "type" : "image/png",
      "size" : 113069
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1688293061447,
      "stop" : 1688293061504,
      "duration" : 57
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(max_runs=4, min_passes=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_header_menu"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "1931041-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header_menu"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://tmn.strana.com'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "3bbe4f1730ebb96e",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5638fe6974e3 <unknown>\n#1 0x5638fe3c6c76 <unknown>\n#2 0x5638fe402c96 <unknown>\n#3 0x5638fe402dc1 <unknown>\n#4 0x5638fe43c7f4 <unknown>\n#5 0x5638fe42203d <unknown>\n#6 0x5638fe43a30e <unknown>\n#7 0x5638fe421de3 <unknown>\n#8 0x5638fe3f72dd <unknown>\n#9 0x5638fe3f834e <unknown>\n#10 0x5638fe6573e4 <unknown>\n#11 0x5638fe65b3d7 <unknown>\n#12 0x5638fe665b20 <unknown>\n#13 0x5638fe65c023 <unknown>\n#14 0x5638fe62a1aa <unknown>\n#15 0x5638fe6806b8 <unknown>\n#16 0x5638fe680847 <unknown>\n#17 0x5638fe690243 <unknown>\n#18 0x7f4173cfb609 start_thread",
      "time" : {
        "start" : 1688292848355,
        "stop" : 1688292953564,
        "duration" : 105209
      }
    }, {
      "uid" : "bf05d3d944c7fe8",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d2fa1034e3 <unknown>\n#1 0x55d2f9e32c76 <unknown>\n#2 0x55d2f9e6ec96 <unknown>\n#3 0x55d2f9e6edc1 <unknown>\n#4 0x55d2f9ea87f4 <unknown>\n#5 0x55d2f9e8e03d <unknown>\n#6 0x55d2f9ea630e <unknown>\n#7 0x55d2f9e8dde3 <unknown>\n#8 0x55d2f9e632dd <unknown>\n#9 0x55d2f9e6434e <unknown>\n#10 0x55d2fa0c33e4 <unknown>\n#11 0x55d2fa0c73d7 <unknown>\n#12 0x55d2fa0d1b20 <unknown>\n#13 0x55d2fa0c8023 <unknown>\n#14 0x55d2fa0961aa <unknown>\n#15 0x55d2fa0ec6b8 <unknown>\n#16 0x55d2fa0ec847 <unknown>\n#17 0x55d2fa0fc243 <unknown>\n#18 0x7f7a154e6609 start_thread",
      "time" : {
        "start" : 1688292740887,
        "stop" : 1688292847189,
        "duration" : 106302
      }
    }, {
      "uid" : "7d1b28ea34af548",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55bebb2684e3 <unknown>\n#1 0x55bebaf97c76 <unknown>\n#2 0x55bebafd3c96 <unknown>\n#3 0x55bebafd3dc1 <unknown>\n#4 0x55bebb00d7f4 <unknown>\n#5 0x55bebaff303d <unknown>\n#6 0x55bebb00b30e <unknown>\n#7 0x55bebaff2de3 <unknown>\n#8 0x55bebafc82dd <unknown>\n#9 0x55bebafc934e <unknown>\n#10 0x55bebb2283e4 <unknown>\n#11 0x55bebb22c3d7 <unknown>\n#12 0x55bebb236b20 <unknown>\n#13 0x55bebb22d023 <unknown>\n#14 0x55bebb1fb1aa <unknown>\n#15 0x55bebb2516b8 <unknown>\n#16 0x55bebb251847 <unknown>\n#17 0x55bebb261243 <unknown>\n#18 0x7f923cf76609 start_thread",
      "time" : {
        "start" : 1688292633588,
        "stop" : 1688292739684,
        "duration" : 106096
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "flaky(max_runs=4, min_passes=1)" ]
  },
  "source" : "97529bad7ca5cf0f.json",
  "parameterValues" : [ "'https://tmn.strana.com'" ]
}