{
  "uid" : "7eb07c991f02fc55",
  "name" : "Проверка квартир ТМН-0",
  "fullName" : "tests.test_apart_from_header#test_tmn_apart",
  "historyId" : "88174af5e697a6358ebc717e4645fc6c",
  "time" : {
    "start" : 1690773094608,
    "stop" : 1690773103943,
    "duration" : 9335
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'rgba(1, 35, 69, 1)' == 'rgba(146, 39, 143, 1)'\n  - rgba(146, 39, 143, 1)\n  + rgba(1, 35, 69, 1)",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6f5c4778e11292f925e82b4747ee696a\")>\nindex = 0\n\n    @testit.description('Проверяем, что при нажатии на х-комнатную квартиру в хэдере, мы попадаем на выборщик с нужной '\n                        'комнатностью.')\n    @testit.displayName(\"Проверка квартир по комнатности ТМН-{index}\")\n    @allure.title(\"Проверка квартир ТМН-{index}\")\n    @pytest.mark.parametrize(\"index\", range(5))\n    def test_tmn_apart(driver, index):\n        head = Header(driver)\n        with testit.step(\"Открываем главную страницу ТМН\"):\n            Base.open_page(driver, URLS_MAIN['url_tmn'])\n            head.move_to_apart()\n        with testit.step(\"Выбираем комнатность {index}\"):\n            link_index = 9 + index\n            getattr(head, f\"click_s_link_wrapper_{link_index}_from_header\")()\n        with testit.step(\"Смотрим, что находимся в выборщике нужного города\"):\n            assert head.get_city_in_apart() == \"в Тюмени\"\n            time.sleep(1)\n        with testit.step(\"Смотрим, какая комнатность выбрана\"):\n>           assert getattr(head, f\"get_apart_{index}\")().value_of_css_property(\"color\") == head.text_color\nE           AssertionError: assert 'rgba(1, 35, 69, 1)' == 'rgba(146, 39, 143, 1)'\nE             - rgba(146, 39, 143, 1)\nE             + rgba(1, 35, 69, 1)\n\ntests/test_apart_from_header.py:47: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1690773093930,
      "stop" : 1690773094608,
      "duration" : 678
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1690773052002,
      "stop" : 1690773052002,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1690773052002,
      "stop" : 1690773052002,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1690773093930,
      "stop" : 1690773093930,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1690773052002,
      "stop" : 1690773052002,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'rgba(1, 35, 69, 1)' == 'rgba(146, 39, 143, 1)'\n  - rgba(146, 39, 143, 1)\n  + rgba(1, 35, 69, 1)",
    "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6f5c4778e11292f925e82b4747ee696a\")>\nindex = 0\n\n    @testit.description('Проверяем, что при нажатии на х-комнатную квартиру в хэдере, мы попадаем на выборщик с нужной '\n                        'комнатностью.')\n    @testit.displayName(\"Проверка квартир по комнатности ТМН-{index}\")\n    @allure.title(\"Проверка квартир ТМН-{index}\")\n    @pytest.mark.parametrize(\"index\", range(5))\n    def test_tmn_apart(driver, index):\n        head = Header(driver)\n        with testit.step(\"Открываем главную страницу ТМН\"):\n            Base.open_page(driver, URLS_MAIN['url_tmn'])\n            head.move_to_apart()\n        with testit.step(\"Выбираем комнатность {index}\"):\n            link_index = 9 + index\n            getattr(head, f\"click_s_link_wrapper_{link_index}_from_header\")()\n        with testit.step(\"Смотрим, что находимся в выборщике нужного города\"):\n            assert head.get_city_in_apart() == \"в Тюмени\"\n            time.sleep(1)\n        with testit.step(\"Смотрим, какая комнатность выбрана\"):\n>           assert getattr(head, f\"get_apart_{index}\")().value_of_css_property(\"color\") == head.text_color\nE           AssertionError: assert 'rgba(1, 35, 69, 1)' == 'rgba(146, 39, 143, 1)'\nE             - rgba(146, 39, 143, 1)\nE             + rgba(1, 35, 69, 1)\n\ntests/test_apart_from_header.py:47: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4f144c025c434a75",
      "name" : "screenshot_tests_test_apart_from_header.py::test_tmn_apart[0].png",
      "source" : "4f144c025c434a75.png",
      "type" : "image/png",
      "size" : 179571
    }, {
      "uid" : "b7c94e9b70c2982c",
      "name" : "stdout",
      "source" : "b7c94e9b70c2982c.txt",
      "type" : "text/plain",
      "size" : 89
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1690773104436,
      "stop" : 1690773104499,
      "duration" : 63
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(max_runs=4, min_passes=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_apart_from_header"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "3633382-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_apart_from_header"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "index",
    "value" : "0"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "flaky(max_runs=4, min_passes=1)" ]
  },
  "source" : "7eb07c991f02fc55.json",
  "parameterValues" : [ "0" ]
}