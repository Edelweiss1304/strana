{
  "uid" : "6a929d2f71699a95",
  "name" : "Проверка кнопки Компания в меню",
  "fullName" : "tests.test_header_menu#test_commercial_from_header_menu",
  "historyId" : "aede3d08764f29320cb9421b7dbf7d64",
  "time" : {
    "start" : 1688096652239,
    "stop" : 1688096758266,
    "duration" : 106027
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55602ccba4e3 <unknown>\n#1 0x55602c9e9c76 <unknown>\n#2 0x55602ca25c96 <unknown>\n#3 0x55602ca25dc1 <unknown>\n#4 0x55602ca5f7f4 <unknown>\n#5 0x55602ca4503d <unknown>\n#6 0x55602ca5d30e <unknown>\n#7 0x55602ca44de3 <unknown>\n#8 0x55602ca1a2dd <unknown>\n#9 0x55602ca1b34e <unknown>\n#10 0x55602cc7a3e4 <unknown>\n#11 0x55602cc7e3d7 <unknown>\n#12 0x55602cc88b20 <unknown>\n#13 0x55602cc7f023 <unknown>\n#14 0x55602cc4d1aa <unknown>\n#15 0x55602cca36b8 <unknown>\n#16 0x55602cca3847 <unknown>\n#17 0x55602ccb3243 <unknown>\n#18 0x7f3c4b88b609 start_thread",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f8294fea544785620c8acdf52f10fb13\")>\nurl = 'https://msk.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @allure.title(\"Проверка кнопки Компания в меню\")\n    def test_commercial_from_header_menu(driver, url):\n        head = Header(driver)\n        Base.open_page(driver, url)\n        time.sleep(2)\n        head.actions.move_to_element(head.get_menu_button()).perform()\n    \n        if url == 'https://mo.strana.com':\n            locator = Base.get_s_link_wrapper_locator(15)\n    \n        elif url == 'https://nsk.strana.com':\n            locator = Base.get_s_link_wrapper_locator(12)\n    \n        else:\n            locator = Base.get_s_link_wrapper_locator(17)\n    \n        Base.get_element_visibility(driver, (By.XPATH, locator)).click()\n>       assert head.get_about_check() == \"О компании\"\n\ntests/test_header_menu.py:212: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_links.py:100: in get_about_check\n    return self.get_element_visibility(self.driver, (By.XPATH, self.about_check)).text\nbase/base_class.py:26: in get_element_visibility\n    raise e\nbase/base_class.py:21: in get_element_visibility\n    return WebDriverWait(driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f8294fea544785620c8acdf52f10fb13\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f333f24dee0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55602ccba4e3 <unknown>\nE       #1 0x55602c9e9c76 <unknown>\nE       #2 0x55602ca25c96 <unknown>\nE       #3 0x55602ca25dc1 <unknown>\nE       #4 0x55602ca5f7f4 <unknown>\nE       #5 0x55602ca4503d <unknown>\nE       #6 0x55602ca5d30e <unknown>\nE       #7 0x55602ca44de3 <unknown>\nE       #8 0x55602ca1a2dd <unknown>\nE       #9 0x55602ca1b34e <unknown>\nE       #10 0x55602cc7a3e4 <unknown>\nE       #11 0x55602cc7e3d7 <unknown>\nE       #12 0x55602cc88b20 <unknown>\nE       #13 0x55602cc7f023 <unknown>\nE       #14 0x55602cc4d1aa <unknown>\nE       #15 0x55602cca36b8 <unknown>\nE       #16 0x55602cca3847 <unknown>\nE       #17 0x55602ccb3243 <unknown>\nE       #18 0x7f3c4b88b609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1688095007438,
      "stop" : 1688095007438,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1688095007438,
      "stop" : 1688095007438,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1688096651530,
      "stop" : 1688096651530,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1688095007438,
      "stop" : 1688095007438,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1688096651530,
      "stop" : 1688096652239,
      "duration" : 709
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55602ccba4e3 <unknown>\n#1 0x55602c9e9c76 <unknown>\n#2 0x55602ca25c96 <unknown>\n#3 0x55602ca25dc1 <unknown>\n#4 0x55602ca5f7f4 <unknown>\n#5 0x55602ca4503d <unknown>\n#6 0x55602ca5d30e <unknown>\n#7 0x55602ca44de3 <unknown>\n#8 0x55602ca1a2dd <unknown>\n#9 0x55602ca1b34e <unknown>\n#10 0x55602cc7a3e4 <unknown>\n#11 0x55602cc7e3d7 <unknown>\n#12 0x55602cc88b20 <unknown>\n#13 0x55602cc7f023 <unknown>\n#14 0x55602cc4d1aa <unknown>\n#15 0x55602cca36b8 <unknown>\n#16 0x55602cca3847 <unknown>\n#17 0x55602ccb3243 <unknown>\n#18 0x7f3c4b88b609 start_thread",
    "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f8294fea544785620c8acdf52f10fb13\")>\nurl = 'https://msk.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @allure.title(\"Проверка кнопки Компания в меню\")\n    def test_commercial_from_header_menu(driver, url):\n        head = Header(driver)\n        Base.open_page(driver, url)\n        time.sleep(2)\n        head.actions.move_to_element(head.get_menu_button()).perform()\n    \n        if url == 'https://mo.strana.com':\n            locator = Base.get_s_link_wrapper_locator(15)\n    \n        elif url == 'https://nsk.strana.com':\n            locator = Base.get_s_link_wrapper_locator(12)\n    \n        else:\n            locator = Base.get_s_link_wrapper_locator(17)\n    \n        Base.get_element_visibility(driver, (By.XPATH, locator)).click()\n>       assert head.get_about_check() == \"О компании\"\n\ntests/test_header_menu.py:212: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/header_links.py:100: in get_about_check\n    return self.get_element_visibility(self.driver, (By.XPATH, self.about_check)).text\nbase/base_class.py:26: in get_element_visibility\n    raise e\nbase/base_class.py:21: in get_element_visibility\n    return WebDriverWait(driver, timeout).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f8294fea544785620c8acdf52f10fb13\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f333f24dee0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55602ccba4e3 <unknown>\nE       #1 0x55602c9e9c76 <unknown>\nE       #2 0x55602ca25c96 <unknown>\nE       #3 0x55602ca25dc1 <unknown>\nE       #4 0x55602ca5f7f4 <unknown>\nE       #5 0x55602ca4503d <unknown>\nE       #6 0x55602ca5d30e <unknown>\nE       #7 0x55602ca44de3 <unknown>\nE       #8 0x55602ca1a2dd <unknown>\nE       #9 0x55602ca1b34e <unknown>\nE       #10 0x55602cc7a3e4 <unknown>\nE       #11 0x55602cc7e3d7 <unknown>\nE       #12 0x55602cc88b20 <unknown>\nE       #13 0x55602cc7f023 <unknown>\nE       #14 0x55602cc4d1aa <unknown>\nE       #15 0x55602cca36b8 <unknown>\nE       #16 0x55602cca3847 <unknown>\nE       #17 0x55602ccb3243 <unknown>\nE       #18 0x7f3c4b88b609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "58aa026b4cad466f",
      "name" : "screenshot_tests_test_header_menu.py::test_commercial_from_header_menu[https:__msk.strana.com].png",
      "source" : "58aa026b4cad466f.png",
      "type" : "image/png",
      "size" : 547972
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1688096759136,
      "stop" : 1688096759195,
      "duration" : 59
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(max_runs=4, min_passes=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_header_menu"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "1791663-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header_menu"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://msk.strana.com'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5ce53aead58807f4",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b8f82ce4e3 <unknown>\n#1 0x55b8f7ffdc76 <unknown>\n#2 0x55b8f8039c96 <unknown>\n#3 0x55b8f8039dc1 <unknown>\n#4 0x55b8f80737f4 <unknown>\n#5 0x55b8f805903d <unknown>\n#6 0x55b8f807130e <unknown>\n#7 0x55b8f8058de3 <unknown>\n#8 0x55b8f802e2dd <unknown>\n#9 0x55b8f802f34e <unknown>\n#10 0x55b8f828e3e4 <unknown>\n#11 0x55b8f82923d7 <unknown>\n#12 0x55b8f829cb20 <unknown>\n#13 0x55b8f8293023 <unknown>\n#14 0x55b8f82611aa <unknown>\n#15 0x55b8f82b76b8 <unknown>\n#16 0x55b8f82b7847 <unknown>\n#17 0x55b8f82c7243 <unknown>\n#18 0x7f573e317609 start_thread",
      "time" : {
        "start" : 1688096545136,
        "stop" : 1688096650548,
        "duration" : 105412
      }
    }, {
      "uid" : "7b22e92aafeee6fa",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5563044154e3 <unknown>\n#1 0x556304144c76 <unknown>\n#2 0x556304180c96 <unknown>\n#3 0x556304180dc1 <unknown>\n#4 0x5563041ba7f4 <unknown>\n#5 0x5563041a003d <unknown>\n#6 0x5563041b830e <unknown>\n#7 0x55630419fde3 <unknown>\n#8 0x5563041752dd <unknown>\n#9 0x55630417634e <unknown>\n#10 0x5563043d53e4 <unknown>\n#11 0x5563043d93d7 <unknown>\n#12 0x5563043e3b20 <unknown>\n#13 0x5563043da023 <unknown>\n#14 0x5563043a81aa <unknown>\n#15 0x5563043fe6b8 <unknown>\n#16 0x5563043fe847 <unknown>\n#17 0x55630440e243 <unknown>\n#18 0x7f9bfb733609 start_thread",
      "time" : {
        "start" : 1688096438205,
        "stop" : 1688096543462,
        "duration" : 105257
      }
    }, {
      "uid" : "59c5111e4fe083b3",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55db396154e3 <unknown>\n#1 0x55db39344c76 <unknown>\n#2 0x55db39380c96 <unknown>\n#3 0x55db39380dc1 <unknown>\n#4 0x55db393ba7f4 <unknown>\n#5 0x55db393a003d <unknown>\n#6 0x55db393b830e <unknown>\n#7 0x55db3939fde3 <unknown>\n#8 0x55db393752dd <unknown>\n#9 0x55db3937634e <unknown>\n#10 0x55db395d53e4 <unknown>\n#11 0x55db395d93d7 <unknown>\n#12 0x55db395e3b20 <unknown>\n#13 0x55db395da023 <unknown>\n#14 0x55db395a81aa <unknown>\n#15 0x55db395fe6b8 <unknown>\n#16 0x55db395fe847 <unknown>\n#17 0x55db3960e243 <unknown>\n#18 0x7efe0c274609 start_thread",
      "time" : {
        "start" : 1688096330867,
        "stop" : 1688096436593,
        "duration" : 105726
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "flaky(max_runs=4, min_passes=1)" ]
  },
  "source" : "6a929d2f71699a95.json",
  "parameterValues" : [ "'https://msk.strana.com'" ]
}