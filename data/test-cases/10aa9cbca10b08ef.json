{
  "uid" : "10aa9cbca10b08ef",
  "name" : "Проверка авторизации в ЛК брокера через хедер",
  "fullName" : "tests.test_login_broker#test_authorization_agent_from_header",
  "historyId" : "96f5c045e2ba782e2831e2ffbb57916b",
  "time" : {
    "start" : 1690366444723,
    "stop" : 1690366551007,
    "duration" : 106284
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558e258aa4e3 <unknown>\n#1 0x558e255d9c76 <unknown>\n#2 0x558e25615c96 <unknown>\n#3 0x558e25615dc1 <unknown>\n#4 0x558e2564f7f4 <unknown>\n#5 0x558e2563503d <unknown>\n#6 0x558e2564d30e <unknown>\n#7 0x558e25634de3 <unknown>\n#8 0x558e2560a2dd <unknown>\n#9 0x558e2560b34e <unknown>\n#10 0x558e2586a3e4 <unknown>\n#11 0x558e2586e3d7 <unknown>\n#12 0x558e25878b20 <unknown>\n#13 0x558e2586f023 <unknown>\n#14 0x558e2583d1aa <unknown>\n#15 0x558e258936b8 <unknown>\n#16 0x558e25893847 <unknown>\n#17 0x558e258a3243 <unknown>\n#18 0x7fd838bec609 start_thread",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"872cc44f4fbb8aa40b5ef373215ebe14\")>\nurl = 'https://ekb.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @pytest.mark.allure_feature(\"Проверка авторизации в ЛК брокера через хедер\")\n    @allure.title(\"Проверка авторизации в ЛК брокера через хедер\")\n    def test_authorization_agent_from_header(driver, url):\n        auth = Authorization(driver)\n        Base.open_page(driver, url)\n>       auth.login_page_broker_from_header(url)\n\ntests/test_login_broker.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/authorization.py:107: in login_page_broker_from_header\n    self.click_first_login_broker_button()\npages/authorization.py:78: in click_first_login_broker_button\n    self.get_first_login_broker_button().click()\npages/authorization.py:57: in get_first_login_broker_button\n    return self.get_element_clickable(self.driver, (By.XPATH, self.first_login_broker_button))\nbase/base_class.py:44: in get_element_clickable\n    raise e\nbase/base_class.py:39: in get_element_clickable\n    return WebDriverWait(driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"872cc44f4fbb8aa40b5ef373215ebe14\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f449fcaa0c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x558e258aa4e3 <unknown>\nE       #1 0x558e255d9c76 <unknown>\nE       #2 0x558e25615c96 <unknown>\nE       #3 0x558e25615dc1 <unknown>\nE       #4 0x558e2564f7f4 <unknown>\nE       #5 0x558e2563503d <unknown>\nE       #6 0x558e2564d30e <unknown>\nE       #7 0x558e25634de3 <unknown>\nE       #8 0x558e2560a2dd <unknown>\nE       #9 0x558e2560b34e <unknown>\nE       #10 0x558e2586a3e4 <unknown>\nE       #11 0x558e2586e3d7 <unknown>\nE       #12 0x558e25878b20 <unknown>\nE       #13 0x558e2586f023 <unknown>\nE       #14 0x558e2583d1aa <unknown>\nE       #15 0x558e258936b8 <unknown>\nE       #16 0x558e25893847 <unknown>\nE       #17 0x558e258a3243 <unknown>\nE       #18 0x7fd838bec609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_verify_url",
    "time" : {
      "start" : 1690365073069,
      "stop" : 1690365073069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1690366443958,
      "stop" : 1690366443958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1690365073069,
      "stop" : 1690365073069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1690366443958,
      "stop" : 1690366444723,
      "duration" : 765
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1690365073069,
      "stop" : 1690365073070,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558e258aa4e3 <unknown>\n#1 0x558e255d9c76 <unknown>\n#2 0x558e25615c96 <unknown>\n#3 0x558e25615dc1 <unknown>\n#4 0x558e2564f7f4 <unknown>\n#5 0x558e2563503d <unknown>\n#6 0x558e2564d30e <unknown>\n#7 0x558e25634de3 <unknown>\n#8 0x558e2560a2dd <unknown>\n#9 0x558e2560b34e <unknown>\n#10 0x558e2586a3e4 <unknown>\n#11 0x558e2586e3d7 <unknown>\n#12 0x558e25878b20 <unknown>\n#13 0x558e2586f023 <unknown>\n#14 0x558e2583d1aa <unknown>\n#15 0x558e258936b8 <unknown>\n#16 0x558e25893847 <unknown>\n#17 0x558e258a3243 <unknown>\n#18 0x7fd838bec609 start_thread",
    "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"872cc44f4fbb8aa40b5ef373215ebe14\")>\nurl = 'https://ekb.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @pytest.mark.allure_feature(\"Проверка авторизации в ЛК брокера через хедер\")\n    @allure.title(\"Проверка авторизации в ЛК брокера через хедер\")\n    def test_authorization_agent_from_header(driver, url):\n        auth = Authorization(driver)\n        Base.open_page(driver, url)\n>       auth.login_page_broker_from_header(url)\n\ntests/test_login_broker.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/authorization.py:107: in login_page_broker_from_header\n    self.click_first_login_broker_button()\npages/authorization.py:78: in click_first_login_broker_button\n    self.get_first_login_broker_button().click()\npages/authorization.py:57: in get_first_login_broker_button\n    return self.get_element_clickable(self.driver, (By.XPATH, self.first_login_broker_button))\nbase/base_class.py:44: in get_element_clickable\n    raise e\nbase/base_class.py:39: in get_element_clickable\n    return WebDriverWait(driver, timeout).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"872cc44f4fbb8aa40b5ef373215ebe14\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f449fcaa0c0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x558e258aa4e3 <unknown>\nE       #1 0x558e255d9c76 <unknown>\nE       #2 0x558e25615c96 <unknown>\nE       #3 0x558e25615dc1 <unknown>\nE       #4 0x558e2564f7f4 <unknown>\nE       #5 0x558e2563503d <unknown>\nE       #6 0x558e2564d30e <unknown>\nE       #7 0x558e25634de3 <unknown>\nE       #8 0x558e2560a2dd <unknown>\nE       #9 0x558e2560b34e <unknown>\nE       #10 0x558e2586a3e4 <unknown>\nE       #11 0x558e2586e3d7 <unknown>\nE       #12 0x558e25878b20 <unknown>\nE       #13 0x558e2586f023 <unknown>\nE       #14 0x558e2583d1aa <unknown>\nE       #15 0x558e258936b8 <unknown>\nE       #16 0x558e25893847 <unknown>\nE       #17 0x558e258a3243 <unknown>\nE       #18 0x7fd838bec609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "136a061869808d08",
      "name" : "screenshot_tests_test_login_broker.py::test_authorization_agent_from_header[https:__ekb.strana.com].png",
      "source" : "136a061869808d08.png",
      "type" : "image/png",
      "size" : 101513
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1690366551418,
      "stop" : 1690366551496,
      "duration" : 78
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(max_runs=4, min_passes=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_login_broker"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "3325188-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_login_broker"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://ekb.strana.com'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "e2a9a7bb1426800a",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f845cd94e3 <unknown>\n#1 0x55f845a08c76 <unknown>\n#2 0x55f845a44c96 <unknown>\n#3 0x55f845a44dc1 <unknown>\n#4 0x55f845a7e7f4 <unknown>\n#5 0x55f845a6403d <unknown>\n#6 0x55f845a7c30e <unknown>\n#7 0x55f845a63de3 <unknown>\n#8 0x55f845a392dd <unknown>\n#9 0x55f845a3a34e <unknown>\n#10 0x55f845c993e4 <unknown>\n#11 0x55f845c9d3d7 <unknown>\n#12 0x55f845ca7b20 <unknown>\n#13 0x55f845c9e023 <unknown>\n#14 0x55f845c6c1aa <unknown>\n#15 0x55f845cc26b8 <unknown>\n#16 0x55f845cc2847 <unknown>\n#17 0x55f845cd2243 <unknown>\n#18 0x7f2845671609 start_thread",
      "time" : {
        "start" : 1690366337032,
        "stop" : 1690366443511,
        "duration" : 106479
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "flaky(max_runs=4, min_passes=1)" ]
  },
  "source" : "10aa9cbca10b08ef.json",
  "parameterValues" : [ "'https://ekb.strana.com'" ]
}