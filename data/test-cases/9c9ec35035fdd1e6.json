{
  "uid" : "9c9ec35035fdd1e6",
  "name" : "Проверка авторизации в ЛК брокера как агент",
  "fullName" : "tests.test_login_broker#test_authorization_agent_tmn",
  "historyId" : "13a9215529167ac116b8a414d58876c4",
  "time" : {
    "start" : 1685584680876,
    "stop" : 1685584680876,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom no such execution context: loader has changed while resolving nodes\n  (Session info: chrome=114.0.5735.90)\nStacktrace:\n#0 0x55be2f9ce4e3 <unknown>\n#1 0x55be2f6fdc76 <unknown>\n#2 0x55be2f7014bb <unknown>\n#3 0x55be2f70397e <unknown>\n#4 0x55be2f703a4c <unknown>\n#5 0x55be2f762f77 <unknown>\n#6 0x55be2f76147f <unknown>\n#7 0x55be2f758de3 <unknown>\n#8 0x55be2f72e2dd <unknown>\n#9 0x55be2f72f34e <unknown>\n#10 0x55be2f98e3e4 <unknown>\n#11 0x55be2f9923d7 <unknown>\n#12 0x55be2f99cb20 <unknown>\n#13 0x55be2f993023 <unknown>\n#14 0x55be2f9611aa <unknown>\n#15 0x55be2f9b76b8 <unknown>\n#16 0x55be2f9b7847 <unknown>\n#17 0x55be2f9c7243 <unknown>\n#18 0x7f999cf88609 start_thread",
  "statusTrace" : "@pytest.fixture(scope=\"function\")\n    def driver():\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(\"detach\", True)\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--headless=new')\n        options.add_argument(\"--window-size=1920,1080\")\n        options.add_argument(\"--disable-extensions\")\n        options.add_argument(\"--proxy-server='direct://'\")\n        options.add_argument(\"--proxy-bypass-list=*\")\n        options.add_argument(\"--start-maximized\")\n        options.add_argument('--disable-gpu')\n        options.add_argument('--disable-dev-shm-usage')\n        options.add_argument('--no-sandbox')\n        options.add_argument('--ignore-certificate-errors')\n        caps = DesiredCapabilities().CHROME\n        caps[\"pageLoadStrategy\"] = \"eager\"\n>       driver = webdriver.Chrome(desired_capabilities=caps, options=options)\n\ntests/conftest.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py:84: in __init__\n    super().__init__(\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py:104: in __init__\n    super().__init__(\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:286: in __init__\n    self.start_session(capabilities, browser_profile)\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:378: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f00929ea310>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created\\\\nfrom no such execut...wn>\\\\n#16 0x55be2f9b7847 \\\\u003Cunknown>\\\\n#17 0x55be2f9c7243 \\\\u003Cunknown>\\\\n#18 0x7f999cf88609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nE       from no such execution context: loader has changed while resolving nodes\nE         (Session info: chrome=114.0.5735.90)\nE       Stacktrace:\nE       #0 0x55be2f9ce4e3 <unknown>\nE       #1 0x55be2f6fdc76 <unknown>\nE       #2 0x55be2f7014bb <unknown>\nE       #3 0x55be2f70397e <unknown>\nE       #4 0x55be2f703a4c <unknown>\nE       #5 0x55be2f762f77 <unknown>\nE       #6 0x55be2f76147f <unknown>\nE       #7 0x55be2f758de3 <unknown>\nE       #8 0x55be2f72e2dd <unknown>\nE       #9 0x55be2f72f34e <unknown>\nE       #10 0x55be2f98e3e4 <unknown>\nE       #11 0x55be2f9923d7 <unknown>\nE       #12 0x55be2f99cb20 <unknown>\nE       #13 0x55be2f993023 <unknown>\nE       #14 0x55be2f9611aa <unknown>\nE       #15 0x55be2f9b76b8 <unknown>\nE       #16 0x55be2f9b7847 <unknown>\nE       #17 0x55be2f9c7243 <unknown>\nE       #18 0x7f999cf88609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1685584680877,
      "stop" : 1685584680877,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "find_element_retry",
    "time" : {
      "start" : 1685584682430,
      "stop" : 1685584682430,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1685584527564,
      "stop" : 1685584527564,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1685584680877,
      "stop" : 1685584681649,
      "duration" : 772
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom no such execution context: loader has changed while resolving nodes\n  (Session info: chrome=114.0.5735.90)\nStacktrace:\n#0 0x55be2f9ce4e3 <unknown>\n#1 0x55be2f6fdc76 <unknown>\n#2 0x55be2f7014bb <unknown>\n#3 0x55be2f70397e <unknown>\n#4 0x55be2f703a4c <unknown>\n#5 0x55be2f762f77 <unknown>\n#6 0x55be2f76147f <unknown>\n#7 0x55be2f758de3 <unknown>\n#8 0x55be2f72e2dd <unknown>\n#9 0x55be2f72f34e <unknown>\n#10 0x55be2f98e3e4 <unknown>\n#11 0x55be2f9923d7 <unknown>\n#12 0x55be2f99cb20 <unknown>\n#13 0x55be2f993023 <unknown>\n#14 0x55be2f9611aa <unknown>\n#15 0x55be2f9b76b8 <unknown>\n#16 0x55be2f9b7847 <unknown>\n#17 0x55be2f9c7243 <unknown>\n#18 0x7f999cf88609 start_thread\n\n",
    "statusTrace" : "  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/strana_test/actions-runner/_work/strana/strana/tests/conftest.py\", line 27, in driver\n    driver = webdriver.Chrome(desired_capabilities=caps, options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chrome/webdriver.py\", line 84, in __init__\n    super().__init__(\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/chromium/webdriver.py\", line 104, in __init__\n    super().__init__(\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 286, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 378, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/home/strana_test/actions-runner/_work/_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1685584527564,
      "stop" : 1685584527564,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1685584527564,
      "stop" : 1685584527565,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "find_element_retry::0",
    "time" : {
      "start" : 1685584688180,
      "stop" : 1685584688180,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_login_broker"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "147652-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_login_broker"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://tmn.strana.com'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9c9ec35035fdd1e6.json",
  "parameterValues" : [ "'https://tmn.strana.com'" ]
}