{
  "uid" : "bf73a857e6773b3f",
  "name" : "Проверка кнопки Telegram в меню",
  "fullName" : "tests.test_header_menu#test_tg_from_header_menu",
  "historyId" : "7892d44f2852b53d955c132ff5b1e351",
  "time" : {
    "start" : 1690600868234,
    "stop" : 1690600872770,
    "duration" : 4536
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'https://nsk.strana.com/' == 'https://t.me...nadevelopment'\n  - https://t.me/stranadevelopment\n  + https://nsk.strana.com/",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"047185c07495f89cc93a1b3e723c7588\")>\nurl = 'https://nsk.strana.com'\n\n    @testit.displayName(\"Проверка кнопки Telegram в меню\")\n    @testit.description(\"Проверка кнопки Telegram в дополнительном меню\")\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @allure.title(\"Проверка кнопки Telegram в меню\")\n    def test_tg_from_header_menu(driver, url):\n        head = Header(driver)\n        with testit.step(\"Открываем главную страницу\"):\n            Base.open_page(driver, url)\n            time.sleep(2)\n        with testit.step(\"наводимся на меню\"):\n            head.actions.move_to_element(head.get_menu_button()).perform()\n    \n            if url == 'https://mo.strana.com':\n                locator = Base.get_s_link_wrapper_locator(13)\n    \n            elif url == 'https://nsk.strana.com':\n                locator = Base.get_s_link_wrapper_locator(10)\n    \n            elif url == 'https://msk.strana.com':\n                locator = Base.get_s_link_wrapper_locator(14)\n    \n            else:\n                locator = Base.get_s_link_wrapper_locator(15)\n    \n        with testit.step(\"Кликаем на Telegram\"):\n            driver.execute_script(\"arguments[0].click();\", Base.get_element_visibility(driver, (By.XPATH, locator)))\n            next_tab_index = (driver.window_handles.index(driver.current_window_handle) + 1) % len(driver.window_handles)\n            driver.switch_to.window(driver.window_handles[next_tab_index])\n        with testit.step(\"Проверяем, что попали на Telegram Страна Девелопмент\"):\n>           assert driver.current_url == \"https://t.me/stranadevelopment\"\nE           AssertionError: assert 'https://nsk.strana.com/' == 'https://t.me...nadevelopment'\nE             - https://t.me/stranadevelopment\nE             + https://nsk.strana.com/\n\ntests/test_header_menu.py:231: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1690600867441,
      "stop" : 1690600868233,
      "duration" : 792
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1690600867441,
      "stop" : 1690600867441,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1690600204155,
      "stop" : 1690600204155,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1690600204154,
      "stop" : 1690600204154,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1690600204154,
      "stop" : 1690600204154,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'https://nsk.strana.com/' == 'https://t.me...nadevelopment'\n  - https://t.me/stranadevelopment\n  + https://nsk.strana.com/",
    "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"047185c07495f89cc93a1b3e723c7588\")>\nurl = 'https://nsk.strana.com'\n\n    @testit.displayName(\"Проверка кнопки Telegram в меню\")\n    @testit.description(\"Проверка кнопки Telegram в дополнительном меню\")\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @allure.title(\"Проверка кнопки Telegram в меню\")\n    def test_tg_from_header_menu(driver, url):\n        head = Header(driver)\n        with testit.step(\"Открываем главную страницу\"):\n            Base.open_page(driver, url)\n            time.sleep(2)\n        with testit.step(\"наводимся на меню\"):\n            head.actions.move_to_element(head.get_menu_button()).perform()\n    \n            if url == 'https://mo.strana.com':\n                locator = Base.get_s_link_wrapper_locator(13)\n    \n            elif url == 'https://nsk.strana.com':\n                locator = Base.get_s_link_wrapper_locator(10)\n    \n            elif url == 'https://msk.strana.com':\n                locator = Base.get_s_link_wrapper_locator(14)\n    \n            else:\n                locator = Base.get_s_link_wrapper_locator(15)\n    \n        with testit.step(\"Кликаем на Telegram\"):\n            driver.execute_script(\"arguments[0].click();\", Base.get_element_visibility(driver, (By.XPATH, locator)))\n            next_tab_index = (driver.window_handles.index(driver.current_window_handle) + 1) % len(driver.window_handles)\n            driver.switch_to.window(driver.window_handles[next_tab_index])\n        with testit.step(\"Проверяем, что попали на Telegram Страна Девелопмент\"):\n>           assert driver.current_url == \"https://t.me/stranadevelopment\"\nE           AssertionError: assert 'https://nsk.strana.com/' == 'https://t.me...nadevelopment'\nE             - https://t.me/stranadevelopment\nE             + https://nsk.strana.com/\n\ntests/test_header_menu.py:231: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "82f7a47c8d07fbd3",
      "name" : "screenshot_tests_test_header_menu.py::test_tg_from_header_menu[https:__nsk.strana.com].png",
      "source" : "82f7a47c8d07fbd3.png",
      "type" : "image/png",
      "size" : 42189
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1690600873654,
      "stop" : 1690600873714,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(max_runs=4, min_passes=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_header_menu"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "3517247-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_header_menu"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://nsk.strana.com'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "flaky(max_runs=4, min_passes=1)" ]
  },
  "source" : "bf73a857e6773b3f.json",
  "parameterValues" : [ "'https://nsk.strana.com'" ]
}