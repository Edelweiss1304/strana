{
  "uid" : "b17f52156375ce04",
  "name" : "Проверка авторизации в ЛК клиента",
  "fullName" : "tests.test_login_lk#test_authorization_client",
  "historyId" : "76501fb52de129a16c44aa7360f0135b",
  "time" : {
    "start" : 1688184569719,
    "stop" : 1688184569771,
    "duration" : 52
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\n  (Session info: headless chrome=114.0.5735.90)\nStacktrace:\n#0 0x5607f89f34e3 <unknown>\n#1 0x5607f8722c76 <unknown>\n#2 0x5607f871ac7f <unknown>\n#3 0x5607f870cca2 <unknown>\n#4 0x5607f870e412 <unknown>\n#5 0x5607f870d0ca <unknown>\n#6 0x5607f870c168 <unknown>\n#7 0x5607f870bfa0 <unknown>\n#8 0x5607f870a9bf <unknown>\n#9 0x5607f870afed <unknown>\n#10 0x5607f8724b06 <unknown>\n#11 0x5607f87969e5 <unknown>\n#12 0x5607f877e012 <unknown>\n#13 0x5607f879630e <unknown>\n#14 0x5607f877dde3 <unknown>\n#15 0x5607f87532dd <unknown>\n#16 0x5607f875434e <unknown>\n#17 0x5607f89b33e4 <unknown>\n#18 0x5607f89b73d7 <unknown>\n#19 0x5607f89c1b20 <unknown>\n#20 0x5607f89b8023 <unknown>\n#21 0x5607f89861aa <unknown>\n#22 0x5607f89dc6b8 <unknown>\n#23 0x5607f89dc847 <unknown>\n#24 0x5607f89ec243 <unknown>\n#25 0x7f8b4900b609 start_thread",
  "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"080d565bc70241de448065b43706dd80\")>\nurl = 'https://tmn.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @pytest.mark.allure_feature(\"Проверка авторизации в ЛК клиента\")\n    @allure.title(\"Проверка авторизации в ЛК клиента\")\n    def test_authorization_client(driver, url):\n        auth = Authorization(driver)\n>       Base.open_page(driver, url)\n\ntests/test_login_lk.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_class.py:13: in open_page\n    driver.get(url)\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d5d756450>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_ADDRESS_UNREACHABLE\\\\n ...wn>\\\\n#23 0x5607f89dc847 \\\\u003Cunknown>\\\\n#24 0x5607f89ec243 \\\\u003Cunknown>\\\\n#25 0x7f8b4900b609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\nE         (Session info: headless chrome=114.0.5735.90)\nE       Stacktrace:\nE       #0 0x5607f89f34e3 <unknown>\nE       #1 0x5607f8722c76 <unknown>\nE       #2 0x5607f871ac7f <unknown>\nE       #3 0x5607f870cca2 <unknown>\nE       #4 0x5607f870e412 <unknown>\nE       #5 0x5607f870d0ca <unknown>\nE       #6 0x5607f870c168 <unknown>\nE       #7 0x5607f870bfa0 <unknown>\nE       #8 0x5607f870a9bf <unknown>\nE       #9 0x5607f870afed <unknown>\nE       #10 0x5607f8724b06 <unknown>\nE       #11 0x5607f87969e5 <unknown>\nE       #12 0x5607f877e012 <unknown>\nE       #13 0x5607f879630e <unknown>\nE       #14 0x5607f877dde3 <unknown>\nE       #15 0x5607f87532dd <unknown>\nE       #16 0x5607f875434e <unknown>\nE       #17 0x5607f89b33e4 <unknown>\nE       #18 0x5607f89b73d7 <unknown>\nE       #19 0x5607f89c1b20 <unknown>\nE       #20 0x5607f89b8023 <unknown>\nE       #21 0x5607f89861aa <unknown>\nE       #22 0x5607f89dc6b8 <unknown>\nE       #23 0x5607f89dc847 <unknown>\nE       #24 0x5607f89ec243 <unknown>\nE       #25 0x7f8b4900b609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1688182217713,
      "stop" : 1688182217713,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1688182217713,
      "stop" : 1688182217713,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1688184569021,
      "stop" : 1688184569021,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1688182217713,
      "stop" : 1688182217713,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1688184569021,
      "stop" : 1688184569718,
      "duration" : 697
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\n  (Session info: headless chrome=114.0.5735.90)\nStacktrace:\n#0 0x5607f89f34e3 <unknown>\n#1 0x5607f8722c76 <unknown>\n#2 0x5607f871ac7f <unknown>\n#3 0x5607f870cca2 <unknown>\n#4 0x5607f870e412 <unknown>\n#5 0x5607f870d0ca <unknown>\n#6 0x5607f870c168 <unknown>\n#7 0x5607f870bfa0 <unknown>\n#8 0x5607f870a9bf <unknown>\n#9 0x5607f870afed <unknown>\n#10 0x5607f8724b06 <unknown>\n#11 0x5607f87969e5 <unknown>\n#12 0x5607f877e012 <unknown>\n#13 0x5607f879630e <unknown>\n#14 0x5607f877dde3 <unknown>\n#15 0x5607f87532dd <unknown>\n#16 0x5607f875434e <unknown>\n#17 0x5607f89b33e4 <unknown>\n#18 0x5607f89b73d7 <unknown>\n#19 0x5607f89c1b20 <unknown>\n#20 0x5607f89b8023 <unknown>\n#21 0x5607f89861aa <unknown>\n#22 0x5607f89dc6b8 <unknown>\n#23 0x5607f89dc847 <unknown>\n#24 0x5607f89ec243 <unknown>\n#25 0x7f8b4900b609 start_thread",
    "statusTrace" : "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"080d565bc70241de448065b43706dd80\")>\nurl = 'https://tmn.strana.com'\n\n    @pytest.mark.parametrize(\"url\", URLS_MAIN.values())\n    @pytest.mark.allure_feature(\"Проверка авторизации в ЛК клиента\")\n    @allure.title(\"Проверка авторизации в ЛК клиента\")\n    def test_authorization_client(driver, url):\n        auth = Authorization(driver)\n>       Base.open_page(driver, url)\n\ntests/test_login_lk.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_class.py:13: in open_page\n    driver.get(url)\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d5d756450>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_ADDRESS_UNREACHABLE\\\\n ...wn>\\\\n#23 0x5607f89dc847 \\\\u003Cunknown>\\\\n#24 0x5607f89ec243 \\\\u003Cunknown>\\\\n#25 0x7f8b4900b609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\nE         (Session info: headless chrome=114.0.5735.90)\nE       Stacktrace:\nE       #0 0x5607f89f34e3 <unknown>\nE       #1 0x5607f8722c76 <unknown>\nE       #2 0x5607f871ac7f <unknown>\nE       #3 0x5607f870cca2 <unknown>\nE       #4 0x5607f870e412 <unknown>\nE       #5 0x5607f870d0ca <unknown>\nE       #6 0x5607f870c168 <unknown>\nE       #7 0x5607f870bfa0 <unknown>\nE       #8 0x5607f870a9bf <unknown>\nE       #9 0x5607f870afed <unknown>\nE       #10 0x5607f8724b06 <unknown>\nE       #11 0x5607f87969e5 <unknown>\nE       #12 0x5607f877e012 <unknown>\nE       #13 0x5607f879630e <unknown>\nE       #14 0x5607f877dde3 <unknown>\nE       #15 0x5607f87532dd <unknown>\nE       #16 0x5607f875434e <unknown>\nE       #17 0x5607f89b33e4 <unknown>\nE       #18 0x5607f89b73d7 <unknown>\nE       #19 0x5607f89c1b20 <unknown>\nE       #20 0x5607f89b8023 <unknown>\nE       #21 0x5607f89861aa <unknown>\nE       #22 0x5607f89dc6b8 <unknown>\nE       #23 0x5607f89dc847 <unknown>\nE       #24 0x5607f89ec243 <unknown>\nE       #25 0x7f8b4900b609 start_thread\n\n../../_tool/Python/3.11.3/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5814c3703ae0a14d",
      "name" : "screenshot_tests_test_login_lk.py::test_authorization_client[https:__tmn.strana.com].png",
      "source" : "5814c3703ae0a14d.png",
      "type" : "image/png",
      "size" : 10592
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1688184570131,
      "stop" : 1688184570185,
      "duration" : 54
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(max_runs=4, min_passes=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_login_lk"
  }, {
    "name" : "host",
    "value" : "stranatest"
  }, {
    "name" : "thread",
    "value" : "1847352-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_login_lk"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "url",
    "value" : "'https://tmn.strana.com'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "479d2b4aeb94368f",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\n  (Session info: headless chrome=114.0.5735.90)\nStacktrace:\n#0 0x55b8435074e3 <unknown>\n#1 0x55b843236c76 <unknown>\n#2 0x55b84322ec7f <unknown>\n#3 0x55b843220ca2 <unknown>\n#4 0x55b843222412 <unknown>\n#5 0x55b8432210ca <unknown>\n#6 0x55b843220168 <unknown>\n#7 0x55b84321ffa0 <unknown>\n#8 0x55b84321e9bf <unknown>\n#9 0x55b84321efed <unknown>\n#10 0x55b843238b06 <unknown>\n#11 0x55b8432aa9e5 <unknown>\n#12 0x55b843292012 <unknown>\n#13 0x55b8432aa30e <unknown>\n#14 0x55b843291de3 <unknown>\n#15 0x55b8432672dd <unknown>\n#16 0x55b84326834e <unknown>\n#17 0x55b8434c73e4 <unknown>\n#18 0x55b8434cb3d7 <unknown>\n#19 0x55b8434d5b20 <unknown>\n#20 0x55b8434cc023 <unknown>\n#21 0x55b84349a1aa <unknown>\n#22 0x55b8434f06b8 <unknown>\n#23 0x55b8434f0847 <unknown>\n#24 0x55b843500243 <unknown>\n#25 0x7f0a0d2f1609 start_thread",
      "time" : {
        "start" : 1688184568569,
        "stop" : 1688184568631,
        "duration" : 62
      }
    }, {
      "uid" : "7375ee3ded3735eb",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\n  (Session info: headless chrome=114.0.5735.90)\nStacktrace:\n#0 0x5558212504e3 <unknown>\n#1 0x555820f7fc76 <unknown>\n#2 0x555820f77c7f <unknown>\n#3 0x555820f69ca2 <unknown>\n#4 0x555820f6b412 <unknown>\n#5 0x555820f6a0ca <unknown>\n#6 0x555820f69168 <unknown>\n#7 0x555820f68fa0 <unknown>\n#8 0x555820f679bf <unknown>\n#9 0x555820f67fed <unknown>\n#10 0x555820f81b06 <unknown>\n#11 0x555820ff39e5 <unknown>\n#12 0x555820fdb012 <unknown>\n#13 0x555820ff330e <unknown>\n#14 0x555820fdade3 <unknown>\n#15 0x555820fb02dd <unknown>\n#16 0x555820fb134e <unknown>\n#17 0x5558212103e4 <unknown>\n#18 0x5558212143d7 <unknown>\n#19 0x55582121eb20 <unknown>\n#20 0x555821215023 <unknown>\n#21 0x5558211e31aa <unknown>\n#22 0x5558212396b8 <unknown>\n#23 0x555821239847 <unknown>\n#24 0x555821249243 <unknown>\n#25 0x7fa45612e609 start_thread",
      "time" : {
        "start" : 1688184567374,
        "stop" : 1688184567433,
        "duration" : 59
      }
    }, {
      "uid" : "10ddf8a05a637b2c",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_ADDRESS_UNREACHABLE\n  (Session info: headless chrome=114.0.5735.90)\nStacktrace:\n#0 0x55f3efea54e3 <unknown>\n#1 0x55f3efbd4c76 <unknown>\n#2 0x55f3efbccc7f <unknown>\n#3 0x55f3efbbeca2 <unknown>\n#4 0x55f3efbc0412 <unknown>\n#5 0x55f3efbbf0ca <unknown>\n#6 0x55f3efbbe168 <unknown>\n#7 0x55f3efbbdfa0 <unknown>\n#8 0x55f3efbbc9bf <unknown>\n#9 0x55f3efbbcfed <unknown>\n#10 0x55f3efbd6b06 <unknown>\n#11 0x55f3efc489e5 <unknown>\n#12 0x55f3efc30012 <unknown>\n#13 0x55f3efc4830e <unknown>\n#14 0x55f3efc2fde3 <unknown>\n#15 0x55f3efc052dd <unknown>\n#16 0x55f3efc0634e <unknown>\n#17 0x55f3efe653e4 <unknown>\n#18 0x55f3efe693d7 <unknown>\n#19 0x55f3efe73b20 <unknown>\n#20 0x55f3efe6a023 <unknown>\n#21 0x55f3efe381aa <unknown>\n#22 0x55f3efe8e6b8 <unknown>\n#23 0x55f3efe8e847 <unknown>\n#24 0x55f3efe9e243 <unknown>\n#25 0x7f183c03c609 start_thread",
      "time" : {
        "start" : 1688184566027,
        "stop" : 1688184566244,
        "duration" : 217
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "flaky(max_runs=4, min_passes=1)" ]
  },
  "source" : "b17f52156375ce04.json",
  "parameterValues" : [ "'https://tmn.strana.com'" ]
}